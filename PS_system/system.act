import std;
import globals;
import "NewPRS.act";

open std::channel;

defproc subtractor(bd?<1> max1, min1, max2, min2, max3, min3, max4, reset; bd!<2> O1, O2, O3, O4)
{
	bool b1, b2, _b1, _b2, b1n, b2n;
	
	bool _O1_a, _O2_a, _O3_a, _O4_a;
	bool _max1_r, _max2_r, _max3_r, _max4_r;
	bool _min1_r, _min2_r, _min3_r, _reset_r;
	bool _Reset;
	
	prs{
		~Reset & (~_max1_r & ~max1.a | ~_max2_r & ~max2.a & ~_b1 | ~_max3_r & ~max3.a & ~_b2 | ~_max4_r & ~max4.a & ~_b1 & ~_b2) -> O1.r+
		Reset | max1.a | (max2.a & b1n) | (max3.a & b2n)| (max4.a & b1n & b2n) -> O1.r-

		~Reset & (~_max2_r & ~max2.a & ~b1n | ~_max3_r & ~max3.a & ~_b1 | ~_max4_r & ~max4.a & ~b1n & ~_b2) -> O2.r+
		Reset | max2.a & _b1 | max3.a & b1n | max4.a & _b1 & b2n -> O2.r-

		~Reset & (~_max3_r & ~max3.a & ~b1n & ~b2n | ~_max4_r & ~max4.a & ~_b1 & ~b2n) -> O3.r+
		Reset | max3.a & _b1 & _b2 | max4.a & b1n & _b2 -> O3.r-

		~Reset & ~_max4_r & ~max4.a & ~b1n & ~b2n -> O4.r+
		Reset | max4.a & _b1 & _b2 -> O4.r-

		~Reset & (~_min3_r | ~_min1_r) -> b1+
		Reset | min2.r | reset.r -> b1-

		~Reset & (~_min3_r | ~_min2_r) -> b2+
		Reset | min1.r | reset.r -> b2-

		~Reset & ~_b1 & ~_b2 & ~_min3_r -> min3.a+
		Reset | _min3_r -> min3.a-

		~Reset & ~b1n & ~_b2 & ~_min2_r -> min2.a+
		Reset | _min2_r -> min2.a-

		~Reset & ~_b1 & ~b2n & ~_min1_r -> min1.a+
		Reset | _min1_r -> min1.a-

		~Reset & ~b1n & ~b2n & ~_reset_r -> reset.a+
		Reset | _reset_r -> reset.a-
	
		~Reset & ~_O1_a & ~_max1_r -> max1.a+
		Reset | _O1_a & _max1_r -> max1.a-

		~Reset & (~_O1_a | ~_O2_a) & ~_max2_r -> max2.a+
		Reset | _O1_a & _O2_a & _max2_r -> max2.a-

		~Reset & (~_O1_a | ~_O2_a | ~_O3_a) & ~_max3_r -> max3.a+
		Reset | _O1_a & _O2_a & _O3_a & _max3_r -> max3.a-

		~Reset & (~_O1_a | ~_O2_a | ~_O3_a | ~_O4_a) & ~_max4_r -> max4.a+
		Reset | _O1_a & _O2_a & _O3_a & _O4_a & _max4_r -> max4.a-
		
		
		_Reset -> O1.d[0]-
		_Reset -> O1.d[1]-
		_Reset -> O2.d[0]-
		_Reset -> O2.d[1]-
		_Reset -> O3.d[0]-
		_Reset -> O3.d[1]-
		_Reset -> O4.d[0]-
		_Reset -> O4.d[1]-

		
		/*Inverted variables*/
		O1.a => _O1_a-
		O2.a => _O2_a-
		O3.a => _O3_a-
		O4.a => _O4_a-
		
		max1.r => _max1_r-
		max2.r => _max2_r-
		max3.r => _max3_r-
		max4.r => _max4_r-
		
		min1.r => _min1_r-
		min2.r => _min2_r-
		min3.r => _min3_r-
		reset.r => _reset_r-

		Reset => _Reset-
		
		
		/*Adding xxx2 signal from xxx*/
		b1 => _b1-
		_b1 => b1n-
		
		b2 => _b2-
		_b2 => b2n-
	}
	
	sizing{
		b1{-1};
		_b1{-1};
		b1n{-1};
		b2{-1};
		_b2{-1};
		b2n{-1};
		
		O1.r{-3};
		O2.r{-2};
		O3.r{-2};
		O4.r{-2};
		min1.a{-1};
		min2.a{-1};
		min3.a{-1};
		reset.a{-1};
		max1.a{-1};
		max2.a{-2};
		max3.a{-2};
		max4.a{-2};
		
		_O1_a{-1};
		_O2_a{-1};
		_O3_a{-1};
		_O4_a{-1};
		_max1_r{-1};
		_max2_r{-1};
		_max3_r{-1};
		_max4_r{-1};
		_min1_r{-1};
		_min2_r{-1};
		_min3_r{-1};
		_reset_r{-1}
	}
}

defproc identifier(bd?<1> P1, P2, P3, P4; bd!<1> O1max, O1min, O2max, O2min, O3max, O3min, O4max, subreset)
{
	bool trend, flat, b1, b2, y;
	bool _trend, trend2, _flat, _b1, b1n, _b2, b2n, _y;
	
	bool _P1_r, P1_rn, _P2_r, P2_rn, _P3_r, P3_rn, _P4_r, P4_rn;
	bool _O1max_a, _O1min_a, _O2min_a, _O3min_a, _subreset_a;
	bool _Reset;
	
	prs{
		~Reset & ~_P1_r & ~_flat & ~y -> O1max.r+
		Reset | P1_rn & y -> O1max.r-

		~Reset & ~_P2_r & ~b1n & ~b2n & ~trend2 -> O1min.r+
		Reset | P2_rn & b1n -> O1min.r-

		~Reset & ~_P1_r & ~_b1 & ~_trend -> O2max.r+
		Reset | P1_rn & _b1 & _trend -> O2max.r-

		~Reset & ~_P3_r & ~_b1 & ~b2n & ~trend2 -> O2min.r+
		Reset | P3_rn & _b1 & b2n -> O2min.r-

		~Reset & ~_P2_r & ~b1n & ~_b2 & ~_trend -> O3max.r+
		Reset | P2_rn & b1n & _b2 & _trend-> O3max.r-

		~Reset & ~_P4_r & ~trend2 -> O3min.r+
		Reset | P4_rn & b1n -> O3min.r-

		~Reset & ~_P3_r & ~_b1 & ~_b2 -> O4max.r+
		Reset | P3_rn & _b1 & b2n -> O4max.r-

		~Reset & ~_P1_r & ~b1n & ~flat & ~y -> subreset.r+
		Reset | P1_rn & flat & y -> subreset.r-

		~_Reset | ~_O2min_a | ~_O1min_a | ~_subreset_a | ~_O3min_a -> trend+      /*Trend is set to 1*/
		_Reset & (O4max.a | O3max.a | O2max.a) -> trend-

		~Reset & ~_trend & ~_y -> flat+
		Reset | P2_rn & _y -> flat-

		~Reset & (~_P1_r & ~_b1 & ~b2n & ~trend2 | ~_subreset_a & ~_trend | ~_O1max_a) -> y+
		Reset | _P1_r -> y-

		~Reset & (~_P2_r & ~_b2 & ~trend2 | ~_P2_r & ~b2n & ~_trend | ~_trend & ~_P4_r) -> b1+
		Reset | P3_rn & trend2 & _b2 | P3_rn & _trend & b2n | y -> b1-

		~Reset & ~_P3_r & ~b1n -> b2+
		Reset | _P3_r & P2_rn & b1n -> b2-

		
		/*Inverted variables*/
		flat => _flat-
		y => _y-
		O1max.a => _O1max_a-
		O1min.a => _O1min_a-
		O2min.a => _O2min_a-
		O3min.a => _O3min_a-
		subreset.a => _subreset_a-
		
		Reset => _Reset-
		
		
		/*Adding xxx2 signal from xxx*/
		b1 => _b1-
		_b1 => b1n-
		
		b2 => _b2-
		_b2 => b2n-
		
		trend => _trend-
		_trend => trend2-
		
		P1.r => _P1_r-
		_P1_r => P1_rn-
		
		P2.r => _P2_r-
		_P2_r => P2_rn-
		
		P3.r => _P3_r-
		_P3_r => P3_rn-
		
		P4.r => _P4_r-
		_P4_r => P4_rn-
		
	}
	
	sizing{
		//internal variable
		trend{-1};
		_trend{-1};
		trend2{-1};
		flat{-1};
		_flat{-1};
		b1{-2};
		_b1{-1};
		b1n{-1};
		b2{-2};
		_b2{-1};
		b2n{-1};
		y{-2};
		_y{-1};
		
		O1max.r{-2};
		O1min.r{-2};
		O2max.r{-2};
		O2min.r{-2};
		O3max.r{-2};
		O3min.r{-2};
		O4max.r{-2};
		subreset.r{-2};
		
		//external variable
		_P1_r{-1};
		P1_rn{-1};
		_P2_r{-1};
		P2_rn{-1};
		_P3_r{-1};
		P3_rn{-1};
		_P4_r{-1};
		P4_rn{-1};
		
		_O1max_a{-1};
		_O1min_a{-1};
		_O2min_a{-1};
		_O3min_a{-1};
		_subreset_a{-1};
		
		_Reset{-1}
	}
}

defproc AND2X1 (bool? A, B; bool! Y) 
{
  bool _Y;
  
  prs {  
    A & B => _Y- 
   _Y => Y-
  }
  
  sizing {
  	_Y{-1}; 
  	Y{-1} 
  }
  
}

defproc OR8X1 (bool? N, S, W, E, NE, NW, SE, SW; bool! Y)
{
  bool _Y;

  prs {
     N | S | W | E | NE | NW | SE | SW => _Y-
     _Y => Y-
  }
  
  sizing { 
  	_Y{-1}; 
  	Y{-1} 
  }
  
}

defproc system(bd?<1> in11, in21, in31, in41, in12, in22, in32, in42; bool? N, S, W, NE, NW, SE, SW)
{
	identifier A1, A2;
	subtractor SUB1, SUB2;
	counter<4> C11, C21, C31, C41, CC, C12, C22, C32, C42;
	AND2X1 AND;
	OR8X1 OR;
	
	A1.P1 = in11;
	A1.P2 = in21;
	A1.P3 = in31;
	A1.P4 = in41;
	A2.P1 = in12;
	A2.P2 = in22;
	A2.P3 = in32;
	A2.P4 = in42;
	
	A1.O1max = SUB1.max1;
	A1.O1min = SUB1.min1;
	A1.O2max = SUB1.max2;
	A1.O2min = SUB1.min2;
	A1.O3max = SUB1.max3;
	A1.O3min = SUB1.min3;
	A1.O4max = SUB1.max4;
	A1.subreset = SUB1.reset;	
	A2.O1max = SUB2.max1;
	A2.O1min = SUB2.min1;
	A2.O2max = SUB2.max2;
	A2.O2min = SUB2.min2;
	A2.O3max = SUB2.max3;
	A2.O3min = SUB2.min3;
	A2.O4max = SUB2.max4;
	A2.subreset = SUB2.reset;
	
	C11.in = SUB1.O1;
	C21.in = SUB1.O2;
	C31.in = SUB1.O3;
	C41.in = SUB1.O4;
	C12.in = SUB2.O1;
	C22.in = SUB2.O2;
	C32.in = SUB2.O3;
	C42.in = SUB2.O4;
	
	C21.in.r = AND.A;
	OR.Y = AND.B;
	AND.Y = CC.in.r;
	C21.in.d[0] = CC.in.d[0];
	C21.in.d[1] = CC.in.d[1];
	N = OR.N;
	S = OR.S;
	W = OR.W;
	C22.in.r = OR.E;
	NE = OR.NE;
	NW = OR.NW;
	SE = OR.SE;
	SW = OR.SW;
}

system t;
